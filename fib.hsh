let util = std.import("util.hsh")

memo function fib(n)
    if n < 2 then
        1
    else
        fib(n - 1) + fib(n - 2)
    end
end

let table = @[]
function tfib(n)
	if n < 2 then
		1
	elseif std.contains(table, n) then
		table[n]
	else
		table[n] = tfib(n - 1) + tfib(n - 2)
		table[n]
	end
end

function run_test(f, n, file)
	${ echo n,time,fib > $file } # csv header
	for i in std.range(1, n+1, 1) do
		let t = util.time_ns()
	    let r = f(i)
	    t = (util.time_ns() - t) / 1000000 # ns to ms
	    ${ echo $i,$t,$r >> $file }
	end
end

run_test(fib, 70, "data/fibonacci/fib-memo.csv")
run_test(fib, 70, "data/fibonacci/fib-hand-memo.csv")
