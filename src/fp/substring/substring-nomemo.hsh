# Author: Caio Raposo
# Date: 2022-09-09
# Description: Given two strings, this algorithm finds the number of times the
# second string occurs in the first string, whether continuously or
# discontinuously. With memoization, it has time complexity of O(MN) where M is
# the size of the first string, and N the second.
# Reference: https://www.geeksforgeeks.org/find-number-times-string-occurs-given-string/

let args = std.args()
std.randseed(0)

let M = std.int(args[0])
let N = std.int(args[1])

function get_random_str(n)
	let str = ""
	let letters = "AGTC"
	for _ in std.range(0, n, 1) do
		str = str ++ std.to_string(letters[std.randint(0, 3)])
	end
	str
end

# a and b will be captured by the sub function.
let a = get_random_str(M)
let b = get_random_str(N)

function sub(m, n)
	if (m == 0 and n == 0) or n == 0 then
		return 1
	elseif m == 0 then
		return 0
	end

	if a[m - 1] == b[n - 1] then
		sub(m - 1, n - 1) + sub(m - 1, n)
	else
		sub(m - 1, n)
	end
end

std.println(sub(M, N))
